/*
 * SPDX-FileCopyrightText: no
 * SPDX-License-Identifier: CC0-1.0
 */

/*
A branding component can ship a stylesheet (like this one)
which is applied to parts of the Calamares user-interface.
In principle, all parts can be styled through CSS.
Missing parts should be filed as issues.

The IDs are based on the object names in the C++ code.
You can use the Debug Dialog to find out object names:
  - Open the debug dialog
  - Choose tab *Tools*
  - Click *Widget Tree* button
The list of object names is printed in the log.

Documentation for styling Qt Widgets through a stylesheet
can be found at
    https://doc.qt.io/qt-5/stylesheet-examples.html
    https://doc.qt.io/qt-5/stylesheet-reference.html
In Calamares, styling widget classes is supported (e.g.
using `QComboBox` as a selector).

This example stylesheet has all the actual styling commented out.
The examples are not exhaustive.

*/

/*** Generic Widgets.
 *
 * You can style **all** widgets of a given class by selecting
 * the class name. Some widgets have specialized sub-selectors.
 */

/*
QPushButton { background-color: green; }
*/

/*** Main application window.
 *
 * The main application window has the sidebar, which in turn
 * contains a logo and a list of items -- note that the list
 * can **not** be styled, since it has its own custom C++
 * delegate code.
 */

/*
#mainApp { }
#sidebarApp { }
#logoApp { }
*/

/*** Welcome module.
 *
 * There are plenty of parts, but the buttons are the most interesting
 * ones (donate, release notes, ...). The little icon image can be
 * styled through *qproperty-icon*, which is a little obscure.
 * URLs can reference the QRC paths of the Calamares application
 * or loaded via plugins or within the filesystem. There is no
 * comprehensive list of available icons, though.
 */

/*
QPushButton#aboutButton { qproperty-icon: url(:/data/images/release.svg); }
#donateButton,
#supportButton,
#releaseNotesButton,
#knownIssuesButton { qproperty-icon: url(:/data/images/help.svg); }
*/

/*** Partitioning module.
 *
 * Many moving parts, which you will need to experiment with.
 */

/*
#bootInfoIcon { }
#bootInfoLable { }
#deviceInfoIcon { }
#defineInfoLabel { }
#scrollAreaWidgetContents { }
#partitionBarView { }
*/

/*** Licensing module.
 *
 * The licensing module paints individual widgets for each of
 * the licenses. The item can be collapsed or expanded.
 */

/*
#licenseItem {  }
#licenseItemFullText {  }
*/
/*
#mainText{
	font : bold 18px;
}

#logoApp {
    min-height: 80px;
    margin-bottom: 50px;
}
*/


QVBoxLayout {
    background-color: #f5dff0;
    color: #220a3e;
}

QAbstractItemView::item {
    background-color: #f5dff0;
    color: #220a3e;
}

QPushButton {
    background-color: #f7d7e9;
    color: #220a3e;
}

QPushButton:hover {
    background-color: #b05cd0;
    color: #220a3e;
}

QLabel {
    color: #220a3e;
    background-color: #f5dff0;
}

QFrame {
    color: #220a3e;
    background-color: #f5dff0;
}

QDialog {
    color: #220a3e;
    background-color: #f5dff0;
}

QMainWindow {
    color: #220a3e;
    background-color: #f5dff0;
}

QGroupBox {
    color: #220a3e;
    background-color: #f7d7e9;
}
#mainApp {
    background-color: #f5dff0;
}

QWidget {
    background-color: #f5dff0;
}

QProgressBar {
    color: #220a3e;
    background-color: #fff0ff;
    border: 1px solid;
    text-align: center;
}

QProgressBar::chunk {
    background-color: #b05cd0;
}

/*QCheckBox {
    color: #220a3e;
    background-color: #fff0ff;
}*/

QComboBox {
    color: #220a3e;
    background-color: #fff0ff;
    selection-color: #ffdff1;
    selection-background-color: #b05cd0;
    border: 1px solid;
}
/*
QAbstractScrollArea {
    color: #220a3e;
    background-color: #fff0ff;
}
*/

QListView {
    color: #220a3e;
    background-color: #f5dff0;
    selection-color: #ffdff1;
    selection-background-color: #b05cd0;
}

QLineEdit {
    color: #220a3e;
    background-color: #fff0ff;
    border: 1px solid;
}

QToolBox {
    color: #220a3e;
    background-color: #f5dff0;
}


QScrollBar {
    background-color: #fff0ff;
    border: 1px solid;
}

QScrollBar::handle {
    background-color: #E9B9DE;
    min-height: 20px;
}

/*QRadioButton {
    color: #220a3e;
    background-color: #fff0ff;
}

/*QToolBar {
    color: #220a3e;
    background-color: #f5dff0;
}*/


